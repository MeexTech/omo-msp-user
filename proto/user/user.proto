syntax = "proto3";

package omo.msp.user;
option go_package= "proto/user";
import "proto/user/common.proto";

service UserService {
    rpc AddOne(ReqUserAdd) returns (ReplyUserOne) {}
    rpc GetOne(RequestInfo) returns (ReplyUserOne) {}
    rpc GetByPhone(RequestInfo) returns (ReplyUserOne) {}
    rpc GetByEntity(RequestInfo) returns (ReplyUserOne) {}
    rpc GetBySNS(ReqUserBy) returns (ReplyUserOne) {}
    rpc UpdateBase(ReqUserUpdate) returns (ReplyUserOne) {}
    rpc UpdateEntity(ReqUserEntity) returns (ReplyUserOne) {}
    rpc RemoveOne(RequestInfo) returns (ReplyInfo) {}
    rpc GetList(ReqUserList) returns (ReplyUserList) {}
    rpc GetByPage(RequestPage) returns (ReplyUserList) {}
    rpc UpdateSNS(ReqUserSNS) returns (ReplyUserOne) {}
}

enum UserSex {
    Girl = 0;
    Boy = 1;
}

enum UserType {
    SuperRoot = 0;
    EnterpriseAdmin = 1;
    EnterpriseCommon = 2;
    Common = 3;
}

message SNSInfo {
    uint32 type = 1;
    string name = 2;
    string uid = 3;
}

message UserInfo {
    string uid = 1;
    uint64 id = 2;
    UserType type = 3;
    int64 created = 4;
    int64 updated = 5;
    string name = 6;
    string account = 7;
    UserSex sex = 8;
    string nick = 9;
    string remark = 11;
    string creator = 12;
    string operator = 13;
    string phone = 14;
    string entity = 15;
    string portrait = 16;
    repeated SNSInfo sns = 17;
}

message ReqUserAdd {
    string name = 1;
    UserSex sex = 2;
    UserType type = 3;
    string account = 4;
    string phone = 5;
    string remark = 6;
    string nick = 7;
    string operator = 8;
    string passwords = 9;
    string entity = 10;
    string portrait = 12;
    SNSInfo sns = 11;
}

message ReqUserBy {
    string uid = 1;
    uint32 type = 2;
}

message ReqUserUpdate {
    string uid = 1;
    string name = 2;
    string nickName = 3;
    string phone = 4;
    string job = 5;
    string remark = 6;
    UserSex sex = 7;
    string operator = 8;
    string portrait = 9;
}

message ReqUserSNS {
    string user = 1;
    bool add = 2;
    uint32 type = 3;
    string name = 4;
    string uid = 5;
    string operator = 6;
}

message ReqUserEntity {
    string uid = 1;
    string entity = 2;
}

message ReplyUserOne {
    UserInfo info = 1;
    ReplyStatus status = 2;
}

message ReqUserList {
    repeated string list = 4;
}

message ReplyUserList {
    uint64 total = 1;
    uint32 pageMax = 2;
    uint32 pageNow = 3;
    repeated UserInfo list = 4;
    ReplyStatus status = 5;
}